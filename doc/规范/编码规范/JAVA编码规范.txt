前言：
主要包括排版规范；注释规范；命名规范；编码规范；JTEST规范

术语和定义
	规则：必须遵守的原则
	建议：必须加以考虑得原则
	格式：格式规范
	示例：例子
	
排版规范：
[格式]：程序块缩进风格，缩进空格数4(eclipse中通常设定tab为四个空格)
[格式]：分界符"{"放置于语句体一行，"}"应独占一行并且与引用它的语句体左对齐，
	在函数体的开始，类和接口的定义，以及if,for,do,while,switch,case都要符合本规定。
	[示例]	如下例子不符合规范
			for(...)
			{
				...
			}
			if(...)
			{
				...
			}
			else
			{
				...
			}
			应如下书写：
			for(...){
				...
			}
			if(...){
			
			}else if(...){
			
			}
[格式]:较长的语句、表达式或参数(>80字符)要分成多行书写
		长表达式要在低优先级操作符处划分新行，
		操作符放在新行之首划分出的新行要适当缩进，使排版整齐，语句可读
	[示例]:
		if(!StringUtils.isEmpty(testStr)
			&& testStr.substring(...).indexOf(......))
[格式]:不允许多个语句写在一行中，即一行只写一条语句
	[示例]:如下例子不符合规范
		String aStr = "test1";  String bStr = "test2";
		应写为：
		String aStr = "test1";
		String bStr = "test2";
[格式]:if,for,do,while等语句的执行语句无论多少都要加括号{}
	[示例]:如下例子不符合规范
		if(condition) doSomething...;
		应写为
		if(condition){
			doSomething...;
		}
[格式]:相对独立的程序块之间、变量说明之后必须加空行
	[示例]:如下例子不符合规范
		if(StringUtils.isEmpty(password)){
			return false;
		}
		LoginService loginService = new LoginService();
		...
		应写为：
		if(StringUtils.isEmpty(password)){
			return false;
		}
		
		LoginService loginService = new LoginService();
		...
[格式]:对齐只使用空格不使用tab
	说明：以免不同的编辑器阅读程序时，tab对应空格不同造成程序布局不整齐。
		在eclipse中可将tab自动替换成空格的选项打开(window->preference->java->editor->typing->tabulators)
[]	
		
		
		