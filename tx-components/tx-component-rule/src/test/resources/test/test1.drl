//created on: 2013-3-28
package test

//list any import classes here.
import java.util.Map;
import java.util.ArrayList;
import java.util.List;

import com.tx.component.rule.method.TestPojo;
import com.tx.component.rule.method.ProcessRule;
import com.tx.component.rule.StaticTestClass;
import function com.tx.component.rule.StaticTestClass.print;

//判断条件
function boolean condition(TestPojo testPojo){
	if(testPojo.getTest() != null){
		return true;
	}else{
		return false;
	}
}

//function String test

//declare any global variables here
global Map globals;
global List result;

rule "年龄大于12(可在产品私有属性中设定)岁"
    when
    	//eval(true)
    	//换行的意思是and
    	//所以通用写法一般是：
    	//统一系统规则引擎默认写法：
    	
    	//从统一的Map类型中接收需要的参数
    	//第一句接收统一事实
    	$fact : Map()
    	//$fact : Map($testPojoObject : get("testPojo"))
    	
    	
    	//接收实际要使用的事实....
    	$testPojo : TestPojo() from $fact["testPojo"]
    	//...其他需要接收的东东
    	//String：字符串
    	//TestPojo(test == "abc") from $fact["testPojo"]
    	//正则表达式：
    	//TestPojo(test matches "[A-Z][a-z]+") from $fact["testPojo"]
    	//Date：日期类型 日期的格式默认是"dd-mmmm-yyyy"，可以更改。
    	//TestPojo(dateCreate > "01-Feb-2009") from $fact["testPojo"] 
    	//Boolean：布尔类型
    	//TestPojo(isApprove == true) from $fact["testPojo"] 
    	//Enum：枚举类型
    	//TestPojo((type == Account.Type.STUDENT) from $fact["testPojo"] 
    	
    	//具体的判断
    	//从实体中提取参数
    	//根据参数判断出一个结果
    	//这里怎么写不限制
    	eval(condition((TestPojo)$testPojo))
    then
    	//如果返回结果中，result  List为空则先进行创建
    	if(result == null){
    		result = new ArrayList();
    		//drools.getWorkingMemory().setGlobal("result",result);
    		drools.getKnowledgeRuntime().setGlobal("result",result);
    	}
    	
    	
    	//call static method
    	StaticTestClass.print();
    	//call static function
    	print();
    	//java code
        System.out.println("call rule");
        //
        System.out.println("call rule");
        System.out.println("call rule");	
end
